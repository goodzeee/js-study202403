// 1 ~ 100 사이의 랜덤한 숫자하나가 정답으로 주어진다.
// 사용자는 이 사이의 숫자를 입력할 수 있어야 한다.
// 시스템은 입력한 숫자를 판단하여 up인지 down인지 알려줘야 한다.
// 만약 정답을 맞추지 못하면 지속해서 입력을 받고 결과를 알려준다.
// 정답을 맞추면 맞췄다는 메시지와 함께 프로그램을 종료한다.

// 사용자들은 입력 기회가 5번으로 제한된다. 
// 즉, 5번 안에 정답을 맞추지 못할 경우 게임이 강제종료된다.


// 정답 생성 랜덤 상수 주기 1.
var randomNum = Math.floor(Math.random() * 100) + 1;

var secret = +prompt('')

while (true) {
//사용자의 입력값 prompt 2.
if (secret === randomNum) {
  alert('정답 입니다.');
  break;
} else if (secret > answer) {
  alert('UP !!')
} else {
  alert('Down !!')
}
}

// 정답 판정 if조건문으로 정답 맞췄을 때 3. 대소비교로 같을 때 작을 때 클 때 주기 up, down

// 정답 고정 시켜주고 싶을 때 while로 고정해두기

// 입력횟수 기회 주기 count = 5; count--;

// 카운트 다운 게임 종료 조건 if count === 0

// 사용자는 게임 시작전에 난이도를 설정할 수 있다. 
// 난이도는 상, 중, 하 난이도가 존재하며 난이도별 입력 횟수제한이 다르다.
// var count = initcount; 로 입력기회 횟수 난이도별로 주기 위해
// if 조건문으로 lev 1, 2, 3일 때로 나눠서 initcount 따로따로 주기
// 난이도 선택도 무한루프로 감싸기 while